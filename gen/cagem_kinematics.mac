prepareKinematics(sysdef):= block([
    time0, timeKI1, timeKI2, timeSP1, timeSP2, timeCPP, timePLT,
    ssKI1, ssKI2, ssKI, ssSP1, ssSP2, ssSP, ssCPP, ssPLT,
    timeTEXFR, ssTEXFR, timeTEXEN, ssTEXEN, timeTotal, ss, mm, seconds,
    filePLT, fileTEXFR, fileTEXEN, fileCPP,
    nbrbodymax, nbrdofmax, nbrdepmax, 
    i, j, j_, k, k_, f, temp, phiG, pi, pdi, pddi, p, pd, pdd, q, nbr_relative, elastic_dof_idx, 
    SIMPLIFY, SMALL_ELAST,INPUTS, STATES, WITH_LINEAR, WITH_ACCELERATIONS, EXTERNAL, DEXT_VARS, EXT_VARS, EXT_PARAM, F_EXT, 
    title, mass, IG, gravity, T0G, TrefG, elastic_dof, ebody, BodyRef, T0Gd, R0G, R0Gd, MatRot, omega, omega_z, omega_, omegad, vG, vG_z, vG_, aG, nbrdof, nbrz, nbrbody, nbrdep, vGpartial, omegapartial, z_list: [], node_forces: [], vGpartial_z, omegapartial_z,
    qi, qdi, Ixx, Iyy, Izz, Ixy, Ixz, Iyz], 
    local(temp, phiG, mass, IG, gravity, T0G, TrefG, elastic_dof, ebody, BodyRef, T0Gd, R0G, R0Gd, MatRot, omega, omega_z, omega_, omegad, vG, vG_z, vG_, aG, vGpartial, omegapartial, vGpartial_z, omegapartial_, qi, qdi, Ixx, Iyy, Izz, Ixy, Ixz, Iyz, pi, pdi, pddi, p, pd, pdd, q, qi, qdi, FinalTime, StepSave, StepMax, EXTERNAL, DEXT_VARS, EXT_VARS, EXT_PARAM, F_EXT),

    printf(true, "Generating for system with ~d bodies, ~d degrees of freedom, ~d dependent variables.~%", sysdef@nbrbody, sysdef@nbrdof, sysdef@nbrdep),

    time0: elapsed_run_time(),
    
    depends(p, t),
    /* TODO: also make p a namable list */
    
    if sysdef@default_states=1 then
        depends(q, t)
    else
        for i:1 thru sysdef@nbrdof do
            depends(sysdef@states[i], t),

    for i: 1 thru length(sysdef@z_list) do 
        depends(op(sysdef@z_list[i]), t),
    
    
    zero_z_list: makelist(sysdef@z_list[i]=0, i, 1, length(sysdef@z_list)),

    for i: 1 thru sysdef@nbrbody do (
        T0Gd[i]: diff(sysdef@T0G[i], t),
        vG[i]: submatrix(4, T0Gd[i], 1, 2, 3),
        vG_z[i]: simplify(vG[i]),
        vG[i]: simplify(subst(zero_z_list, vG[i])),
        
        R0G[i]: submatrix(4, sysdef@T0G[i], 4),
        R0Gd[i]: submatrix(4, T0Gd[i], 4),
        MatRot[i]: R0Gd[i].transpose(R0G[i]),
        omega[i]: matrix([MatRot[i][3,2]], [MatRot[i][1,3]], [MatRot[i][2,1]]),
        omega_z[i]: simplify(omega[i]),
        omega[i]: simplify(subst(zero_z_list, omega[i])),
        
        T0G[i]: simplify(subst(zero_z_list, sysdef@T0G[i])),
        T0Gd[i]: simplify(subst(zero_z_list, T0Gd[i]))        
    ),

    for k:1 thru sysdef@nbrdep do
        pdi[k]: diff(sysdef@pi[k],t),
    
    timeKI1: elapsed_run_time(),
    ssKI1: trunc(timeKI1-time0),

    print("Simplification of kinematics parameters (part one)"),
    
    if sysdef@SIMPLIFY=1 then (
        for i:1 thru sysdef@nbrbody do (
            sysdef@T0G[i]: simplify(sysdef@T0G[i]),
            T0Gd[i]: simplify(T0Gd[i]),
            vG[i]: simplify(vG[i]),
            omega[i]: simplify(omega[i]),
            vG_z[i]: simplify(vG_z[i]),
            omega_z[i]: simplify(omega_z[i])
        ),
        
        for k: 1 thru sysdef@nbrdep do
            sysdef@pi[k]: simplify(sysdef@pi[k]),
            pdi[k]: simplify(pdi[k])
    ),
    
    timeSP1: elapsed_run_time(),
    ssSP1: trunc(timeSP1-timeKI1),

    print("Completed calculation of kinematics (part two)"),
    
    for i:1 thru sysdef@nbrbody do (
        aG[i]: diff(vG[i], t),
        omegad[i]: diff(omega[i], t)
    ),
    
    for k:1 thru sysdef@nbrdep do
        pddi[k]: diff(pdi[k], t),

    timeKI2: elapsed_run_time(),
    ssKI2: trunc(timeKI2-timeSP1),

    print("Simplification of kinematics parameters (part two)"),
    
    if sysdef@SIMPLIFY=1 then (
        for i:1 thru sysdef@nbrbody do (
            aG[i]: simplify(aG[i]),
            omegad[i]: simplify(omegad[i])
        ),
        for k:1 thru sysdef@nbrdep do
            pddi[k]: simplify(pddi[k])
    ),
    
    timeSP2: elapsed_run_time(),
    ssSP2: trunc(timeSP2-timeKI2),

    
    print("Form modification of configuration parameters"),
    
    /* TODO may be handled more elegantly by gradef */
    for i:1 thru sysdef@nbrbody do (
        for j:1 thru sysdef@nbrdof do (
            vG[i]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t,2), vG[i]),
            vG[i]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), vG[i]),
            omega[i]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t,2), omega[i]),
            omega[i]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), omega[i]),
            vG_z[i]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t,2), vG_z[i]),
            vG_z[i]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), vG_z[i]),
            omega_z[i]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t,2), omega_z[i]),
            omega_z[i]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), omega_z[i]),
            aG[i]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t,2), aG[i]),
            aG[i]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), aG[i]),
            omegad[i]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t,2), omegad[i]),
            omegad[i]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), omegad[i]),
            sysdef@T0G[i]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t,2), sysdef@T0G[i]),
            sysdef@T0G[i]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), sysdef@T0G[i]),
            T0Gd[i]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t,2), T0Gd[i]),
            T0Gd[i]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), T0Gd[i])
        ),
        for j:1 thru sysdef@nbrdep do (
            vG[i]: subst(pdd[j], diff(p[j],t,2), vG[i]),
            vG[i]: subst(pd[j], diff(p[j],t), vG[i]),
            omega[i]: subst(pdd[j], diff(p[j],t,2), omega[i]),
            omega[i]: subst(pd[j], diff(p[j],t), omega[i]),
            vG_z[i]: subst(pdd[j], diff(p[j],t,2), vG_z[i]),
            vG_z[i]: subst(pd[j], diff(p[j],t), vG_z[i]),
            omega_z[i]: subst(pdd[j], diff(p[j],t,2), omega_z[i]),
            omega_z[i]: subst(pd[j], diff(p[j],t), omega_z[i]),
            aG[i]: subst(pdd[j], diff(p[j],t,2), aG[i]),
            aG[i]: subst(pd[j], diff(p[j],t), aG[i]),
            omegad[i]: subst(pdd[j], diff(p[j],t,2), omegad[i]),
            omegad[i]: subst(pd[j], diff(p[j],t), omegad[i]),
            sysdef@T0G[i]: subst(pdd[j], diff(p[j],t,2), sysdef@T0G[i]),
            sysdef@T0G[i]: subst(pd[j], diff(p[j],t), sysdef@T0G[i]),
            T0Gd[i]: subst(pdd[j], diff(p[j],t,2), T0Gd[i]),
            T0Gd[i]: subst(pd[j], diff(p[j],t), T0Gd[i])
        ),
        for j:1 thru length(sysdef@z_list) do (
            vG_z[i]: subst(zd[j], diff(sysdef@z_list[j],t), vG_z[i]),
            omega_z[i]: subst(zd[j], diff(sysdef@z_list[j],t), omega_z[i])
        )
    ),
    for k:1 thru sysdef@nbrdep do (
        for j:1 thru sysdef@nbrdof do (
            sysdef@pi[k]: subst(sysdef@states[j], sysdef@states[j], sysdef@pi[k]),
            pdi[k]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), pdi[k]),
            pdi[k]: subst(sysdef@states[j], sysdef@states[j], pdi[k]),
            pddi[k]: subst(sysdef@states_dd[j], diff(sysdef@states[j],t, 2), pddi[k]),
            pddi[k]: subst(sysdef@states_d[j], diff(sysdef@states[j],t), pddi[k]),
            pddi[k]: subst(sysdef@states[j], sysdef@states[j], pddi[k])
        ),
        for j:1 thru sysdef@nbrdep do (
            sysdef@pi[k]: subst(p[j], p[j], sysdef@pi[k]),
            pdi[k]: subst(pd[j], diff(p[j],t), pdi[k]),
            pdi[k]: subst(p[j], p[j], pdi[k]),
            pddi[k]: subst(pdd[j], diff(p[j],t, 2), pddi[k]),
            pddi[k]: subst(pd[j], diff(p[j],t), pddi[k]),
            pddi[k]: subst(p[j], p[j], pddi[k])
        )
    ),

    print("Completed calculation of kinematics (part three)"),
    
    for i:1 thru sysdef@nbrbody do (
        for j:1 thru sysdef@nbrdof do (
            vG_: vG[i],
            omega_: omega[i],
            for k: sysdef@nbrdep step -1 thru 1 do (
                k_: k,
                vG_: subst(pdi[k], pd[k_], vG_),
                vG_: subst(pi[k], p[k_], vG_),
                omega_: subst(pdi[k], pd[k_], omega_),
                omega_: subst(pi[k], p[k_], omega_)
            ),
            
            vGpartial[i, j]: diff(vG_, sysdef@states_d[j]),
            omegapartial[i, j]: diff(omega_, sysdef@states_d[j])
        ),
        for j:1 thru length(sysdef@z_list) do (
            for k: sysdef@nbrdep step -1 thru 1 do (
                k_: k,
                vG_z[i]: subst(pdi[k], pd[k_], vG_z[i]),
                vG_z[i]: subst(pi[k], p[k_], vG_z[i]),
                omega_z[i]: subst(pdi[k], pd[k_], omega_z[i]),
                omega_z[i]: subst(pi[k], p[k_], omega_z[i])
            ),
            vGpartial_z[i, j]: diff(vG_z[i], zd[j]),
            omegapartial_z[i, j]: diff(omega_z[i], zd[j])
        )
    ),
    
    timeKI3: elapsed_run_time(),
    SSKI3: trunc(timeKI3-timeSP2),
    ssKI: ssKI1+ssKI2+SSKI3,
    printf(true, "... Kinematics computation finished ~,3h s.~%", ssKI),
                
    print("Simplification of kinematics parameters (part three)"),
    
    if sysdef@SIMPLIFY = 1 then (
        for i:1 thru sysdef@nbrbody do (
            for j:1 thru sysdef@nbrdof do (
                vGpartial[i,j]: simplify(vGpartial[i,j]),
                omegapartial[i,j]: simplify(omegapartial[i,j])
            ),
            for j:1 thru length(sysdef@z_list) do (
                vGpartial_z[i,j]: simplify(subst(zero_z_list, vGpartial_z[i,j])),
                omegapartial_z[i,j]: simplify(subst(zero_z_list, omegapartial_z[i,j]))
            )
        )
    ),
    
    timeSP3: elapsed_run_time(),
    ssSP3: trunc(timeSP3-timeKI3),
    ssSP: ssSP1+ssSP2+ssSP3, 
    printf(true, "... Kinematics simplification finished in ~,3h s.~%", ssSP),
    
    /* Total CPU-time. */
    timeTotal: elapsed_run_time(),
    ss: timeTotal-time0,
    mm: floor(ss/60),
    totseconds:trunc(ss-mm*60),
    printf(true, "All the operations are finished. Total CPU-time in Maxima: ~d:~6,3,,,,'0h min.~%", mm, totseconds),
    
    sysdef@T0G: makelist(simplify(T0G[i]), i, 1, sysdef@nbrbody),
    sysdef@vG: makelist(simplify(vG[i]), i, 1, sysdef@nbrbody),
    sysdef@omega: makelist(simplify(omega[i]), i, 1, sysdef@nbrbody),
    sysdef@aG: makelist(simplify(aG[i]), i, 1, sysdef@nbrbody),
    sysdef@omegad: makelist(simplify(omegad[i]), i, 1, sysdef@nbrbody),
    sysdef@vGpartial: makelist(makelist(simplify(vGpartial[i, j]), j, 1, sysdef@nbrdof), i, 1, sysdef@nbrbody),
    sysdef@vGpartial_z: makelist(makelist(simplify(vGpartial_z[i, j]), j, 1, length(sysdef@z_list)), i, 1, sysdef@nbrbody),
    sysdef@elasticpartial: makelist([], i, 1, sysdef@nbrbody),
    sysdef@omegapartial: makelist(makelist(simplify(omegapartial[i, j]), j, 1, sysdef@nbrdof), i, 1, sysdef@nbrbody),
    sysdef@omegapartial_z: makelist(makelist(simplify(omegapartial_z[i, j]), j, 1, length(sysdef@z_list)), i, 1, sysdef@nbrbody),
    sysdef@pdi: makelist(pdi[i], i, 1, sysdef@nbrdep),
    sysdef@pddi: makelist(pddi[i], i, 1, sysdef@nbrdep),
    
    sysdef
);

