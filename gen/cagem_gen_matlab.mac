writeMATLABMat(fid, name, m):= block([i, j],
    printf(fid, "~a= [~%", name),
    for i: 1 thru length(m) do (
        printf(fid, "    "),
        for j: 1 thru length(transpose(m)) do (
            printf(fid, "~a", (ssubst(")", "]", ssubst("(", "[", string(m[i, j]))))),
            if j#length(transpose(m)) then
                printf(fid, ", ")
        ),
        if i=length(m) then
            printf(fid, "~%")
        else
            printf(fid, ";~%")
    ),
    printf(fid, "];~%")
);

writeMATLAB_nonlinear(file, f, y, lin):= block([i, fid],
    fid: openw(file),
    
    printf(fid, "f= [~%"),
    for i: 1 thru length(f) do (
        printf(fid, "    ~a~%", (ssubst(")", "]", ssubst("(", "[", string(f[i])))))
    ),
    printf(fid, "];~%~%"),

    printf(fid, "y= [~%"),
    for i: 1 thru length(y) do (
        printf(fid, "    ~a~%", (ssubst(")", "]", ssubst("(", "[", string(y[i])))))
    ),
    printf(fid, "];~%"),
    
    close(fid)
);

writeMATLAB_linear(file, f, y, lin):= block([i, fid],
    fid: openw(file),
    
    if length(lin)>0 and length(lin@E)>0 then (
        printf(fid, "~%"),
        writeMATLABMat(fid, "E", lin@E),
        printf(fid, "~%"),
        writeMATLABMat(fid, "A", lin@A),
        printf(fid, "~%"),
        writeMATLABMat(fid, "B", lin@B),
        printf(fid, "~%"),
        writeMATLABMat(fid, "C", lin@C),
        printf(fid, "~%"),
        writeMATLABMat(fid, "D", lin@D)
    ),
    
    close(fid)
);
