<<block(
    file: sysdef@sys_rel@file,
    title: sysdef@sys_rel@name,
    nbrdof: sysdef@sys_rel@nbrdof,
    nbrbody: sysdef@sys_rel@nbrbody,
    nbrdep: sysdef@sys_rel@nbrdep,
    nbrin: sysdef@sys_rel@nbrin,
    nbrout: length(sysdef@outputs),
    states: sysdef@sys_rel@states,
    inputs: sysdef@sys_rel@u,
    out_names: sysdef@sys_rel@out_names
)$>><<gentran(literal("%% File generated form template cadyn_indices.m.tem on ", eval(timedate()), ". Do not edit!", cr))$>>
<<gentran(literal("%% Multibody system: ", eval(title), cr, cr))$>>

nq = <<gentran(literal(eval(nbrdof)))$>>;
nx = 2*<<gentran(literal(eval(nbrdof)))$>>;
nu = <<gentran(literal(eval(nbrin)))$>>;
ny = <<gentran(literal(eval(nbrout)))$>>;

<<block([i], 
    for i:1 thru nbrdof do
        if sysdef@sys_rel@default_states=1 then
            gentran(literal("q", eval(i), "_idx= ", eval(i), "\;", cr))
        else
            gentran(literal(eval(states[i]), "_idx= ", eval(i), "\;", cr))
)$>>

<<block([i], 
    for i:1 thru nbrdof do
        if sysdef@sys_rel@default_states=1 then
            gentran(literal("q", eval(i), "_d_idx= ", eval(i+nbrdof), "\;", cr))
        else
            gentran(literal(eval(states[i]), "_d_idx= ", eval(i+nbrdof), "\;", cr))
)$>>

<<block([i], 
        for i:1 thru nbrin do (
            gentran(literal("in_", eval(inputs[i]), "_idx= ", eval(i), "\;", cr))
        )
)$>>

<<block([i], 
        for i:1 thru nbrout do (
            if nbrout#length(out_names) then
                gentran(literal("out_", eval(i), "_idx= ", eval(i), "\;", cr))
            else
                gentran(literal("out_", eval(out_names[i]), "_idx= ", eval(i), "\;", cr))
        )
)$>>

dof_names= {
<<block([i], 
    for i:1 thru nbrdof do
        if sysdef@sys_rel@default_states=1 then
            gentran(literal("    'q", eval(i), "'", cr))
        else
            gentran(literal("    '", eval(states[i]), "'", cr))
)$>>
};

dof_d_names= {
<<block([i], 
    for i:1 thru nbrdof do
        if sysdef@sys_rel@default_states=1 then
            gentran(literal("    'qd", eval(i), "'", cr))
        else
            gentran(literal("    '", eval(states[i]), "_d'", cr))
)$>>
};

state_names= {
<<block([i], 
    for i:1 thru nbrdof do
        if sysdef@sys_rel@default_states=1 then
            gentran(literal("    'q", eval(i), "'", cr))
        else
            gentran(literal("    '", eval(states[i]), "'", cr))
)$>>
<<block([i], 
    for i:1 thru nbrdof do
        if sysdef@sys_rel@default_states=1 then
            gentran(literal("    'qd", eval(i), "'", cr))
        else
            gentran(literal("    '", eval(states[i]), "_d'", cr))
)$>>
};

input_names= {
<<block([i], 
    for i:1 thru nbrin do
        gentran(literal("    '", eval(inputs[i]), "'", cr))
)$>>
};

output_names= {
<<block([i], 
        for i:1 thru nbrout do (
            if nbrout#length(out_names) then
                gentran(literal("    'output", eval(i), "'", cr))
            else
                gentran(literal("    '", eval(out_names[i]), "'", cr))
        )
)$>>
};
