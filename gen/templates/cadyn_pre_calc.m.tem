<<block(
    load(cadyn_gen_util),
    file: sysdef@sys_rel@file,
    title: sysdef@sys_rel@name,
    nbrdof: sysdef@sys_rel@nbrdof,
    nbrbody: sysdef@sys_rel@nbrbody,
    nbrdep: sysdef@sys_rel@nbrdep,
    nbrin: sysdef@sys_rel@nbrin,
    states: sysdef@sys_rel@states,
    inputs: sysdef@sys_rel@u,
    out_names: sysdef@sys_rel@out_names,
    u: sysdef@sys_rel@u,
    y: sysdef@outputs,
    external: sysdef@sys_rel@external,
    params: sysdef@all_params,

    f: sysdef@f,
    
    pre_calc_const: sysdef@const_eqns,
    
    subst_list: [],
    for i:1 thru length(sysdef@params) do
        subst_list: endcons(sysdef@params[i]=concat('param\., sysdef@params[i]), subst_list),
        
    for i:1 thru length(pre_calc_const) do
        subst_list: endcons(first(pre_calc_const[i])=concat('param\., first(pre_calc_const[i])), subst_list)
        
)$>>% <<gentran(literal("File generated form template cadyn_acados_pre_calc.m.tem on ", eval(timedate()), ". Do not edit!"))$>>
% <<gentran(literal("Multibody system: ", eval(title)))$>>

function [param, precalcNames]= <<gentran(literal(eval(filename)))$>>_pre_calc(param)

<<block([i],
    for i:1 thru length(pre_calc_const) do
        do_assign(concat('param\., first(pre_calc_const[i])), second(pre_calc_const[i])),

    gentran(literal(cr)),
    for i:1 thru length(pre_calc_const) do
        gentran(literal("precalcNames{", eval(i), "}= '", eval(first(pre_calc_const[i])), "'\;", cr))
)$>>    
