function makeCAGEM(model_path, target_path, skip_gen, files_to_generate, reduce_consts)
maxima_path= getenv('maxima_path');
if isempty(maxima_path)
    error('Please set path to maxima program via "setenv(''maxima_path'', ''PATH_TO_MAXIMA.EXE'');');
end

cagem_path= getenv('cagem_path');
if isempty(cagem_path)
    error('Please set path to cagem.mac script via "setenv(''cagem_path'', ''PATH_TO_CAMGEM.MAC'');');
end

if ~exist('files_to_generate', 'var')
    files_to_generate= {'cpp_direct'};
end
if ~iscell(files_to_generate)
    files_to_generate= {files_to_generate};
end
if ~exist('reduce_consts', 'var')
    reduce_consts= 0;
end

cagem_base= fileparts(cagem_path);
cagem_base= fileparts(cagem_base);

[~, model_name]= fileparts(model_path);
if ~exist('target_path', 'var')
    target_path= fullfile(pwd, model_name);
end

if ~exist(target_path, 'dir')
    mkdir(target_path);
end

skip_gen_file= false(length(files_to_generate), 1);
if ~exist('skip_gen', 'var') || isempty(skip_gen)
    dd_src= dir(model_path);
    for i= 1:length(files_to_generate)
        code_file= target_file_name(model_name, files_to_generate{i});
        code_path= fullfile(target_path, code_file);
        if exist(code_path, 'file')
            dd_dst= dir(code_path);
            if dd_src.datenum<dd_dst.datenum
                fprintf('Skipping generation of "%s"\n', code_file)
                skip_gen_file(i)= true;
            end
        end
    end
    skip_gen= all(skip_gen_file);
end


if ~skip_gen
    if ispc % even on Windows the separator needs to be /
        cagem_path= strrep(cagem_path, '\', '/');
        model_path= strrep(model_path, '\', '/');
        target_path= strrep(target_path, '\', '/');
        model_name= strrep(model_name, '\', '/');
    end

    command_str= [
        maxima_path, ...
        ' ', ...
        '--batch-string="', ...
        'load(\"' cagem_path '\")\$ ', ...
        'sys:cagem(\"' model_path '\", ' num2str(reduce_consts) ')\$ ', ...
        'load(\"' strrep(cagem_path, 'cagem.mac', 'cagem_gen_indices.mac') '\")\$ ', ...
        'cagem_indices(sys,\"' target_path '\")\$ ', ...
        ];
    for i= 1:length(files_to_generate)
        if skip_gen_file(i), continue, end
        command_str= [command_str, ...
        'load(\"' strrep(cagem_path, 'cagem.mac', ['cagem_gen_' files_to_generate{i} '.mac']) '\")\$ ', ...
        'cagem_gen_' files_to_generate{i} '(sys, \"' target_path '\")\$ ', ...
        ];
    end
    command_str= [command_str '"'];

    fprintf('%s\n', command_str);
        
    [status, res]= system(command_str);
    fprintf('Maxima said:\n%s\n', res);

    for i= 1:length(files_to_generate)
        if skip_gen_file(i), continue, end
        code_file= target_file_name(model_name, files_to_generate{i});
        code_path= fullfile(target_path, code_file);
        generated= false;
        if exist(code_path, 'file')
            dd_src= dir(model_path);
            dd_dst= dir(code_path);
            if dd_src.datenum<dd_dst.datenum
                generated= true;
            end
        end
        if ~generated
            error('Code file "%s" was not properly generated by Maxima', code_file);
        end
    end
else
    fprintf('Skipping CADyn generation because model is already up to date or you wanted it so\n');
end

